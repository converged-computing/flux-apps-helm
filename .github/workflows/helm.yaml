name: test and deploy

on:
  pull_request: {}
  push:
    branches:
    - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        app: [amg2023, lammps-reax, laghos, minife, mixbench, mt-gemm, 
              osu-benchmarks, quicksilver, single-node, stream]  
    name: Prepare charts
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - uses: actions/setup-go@v3
      with:
        go-version: ^1.22
    - name: GHCR Login
      if: (github.event_name != 'pull_request')
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Helm
      run: |
        export HELM_EXPERIMENTAL_OCI=1
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash        

    - name: Build Helm
      env:
        app: ${{ matrix.app }}
      run: |
        helm dependency update ./$app
        PKG_RESPONSE=$(helm package ./$app)
        echo "$PKG_RESPONSE"
        CHART_TAR_GZ=$(basename "$PKG_RESPONSE") 
        echo "helm push "$CHART_TAR_GZ" oci://ghcr.io/converged-computing/flux-apps-helm-${app}"
        echo $CHART_TAR_GZ >> chart-name.txt
        cat chart-name.txt

    - name: Create Kind Cluster
      if: (github.event_name == 'pull_request')
      uses: helm/kind-action@v1.5.0
      with:
        cluster_name: kind
        kubectl_version: v1.28.2
        version: v0.20.0
        config: ./kind-config.yaml

    - name: Install Flux Operator
      if: (github.event_name == 'pull_request')
      run: kubectl apply -f https://raw.githubusercontent.com/flux-framework/flux-operator/refs/heads/main/examples/dist/flux-operator.yaml

    - name: Deploy Helm
      if: (github.event_name == 'pull_request')
      env:
        app: ${{ matrix.app }}
      run: helm install app ./${app}

     # Some are too computationally intensive to test here
    - name: Determine Skip Test
      if: (github.event_name == 'pull_request')
      env:
        app: ${{ matrix.app }}
      run: |
        if [[ -e "$app/.skip-test" ]]; then
          echo "Skipping test"
          echo "skip_test=yes" >> $GITHUB_ENV
        else
          echo "skip_test=no" >> $GITHUB_ENV
          echo "Test will be run"        
        fi

    - name: Determine Skip Test (non-PR)
      if: (github.event_name != 'pull_request')
      env:
        app: ${{ matrix.app }}
      run: |
        echo "Skipping test"
        echo "skip_test=yes" >> $GITHUB_ENV

    - name: Test Completion
      if: (env.skip_test == 'no')
      run: |
        echo "Waiting for MiniCluster job to complete"
        sleep 20
        kubectl wait --for=condition=complete --timeout=800s job/app
        # This is the lead broker, regardless of size
        pod_name=$(kubectl get pods -o json | jq -r .items[0].metadata.name)
        kubectl logs ${pod_name}

    - name: Push Helm Chart
      if: (github.event_name != 'pull_request')
      env:
        app: ${{ matrix.app }}
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "${password}" | helm registry login -u ${username} --password-stdin ${registry} 
        CHART_TAR_GZ=$(cat ./chart-name.txt) 
        helm push "$CHART_TAR_GZ" oci://ghcr.io/converged-computing/flux-apps-helm-${app}
