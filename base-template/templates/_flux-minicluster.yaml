{{- define "base-template.flux-minicluster" -}}
apiVersion: flux-framework.org/v1alpha2
kind: MiniCluster
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  size: {{ default 1 .Values.minicluster.size }}
  {{ if .Values.minicluster.interactive }}interactive: true {{ end }}

  logging:
    quiet: {{ if .Values.logging.quiet }}true{{ else }}false{{ end }}

  # This disables installing flux via the view
  flux:
    container:
      disable: {{ if .Values.minicluster.addFlux }}false{{ else }}true{{ end }}
      {{ if .Values.flux }}{{ if .Values.flux.image }}image: {{ .Values.flux.image }}{{ end }}{{ end }}

  containers:
  - image: "{{ default "ghcr.io/converged-computing/metric-lammps-cpu:zen4-reax" .Values.minicluster.image }}"
    command: /bin/bash /tmp/run_${app}.sh
{{ if .Values.minicluster.workdir }}    workdir: {{ .Values.minicluster.workdir }}{{ end }}
    launcher: true
    securityContext:
      privileged: {{ if .Values.minicluster.privileged }}true{{ else }}false{{ end }}
    resources:
      limits:
        nvidia.com/gpu: "{{ .Values.minicluster.gpus }}"
    commands:
      {{ if .Values.minicluster.commands_init }}init: {{ .Values.minicluster.commands_init }}{{ end }}
      post: |
         {{ include "chart.fluxfinish" . }}

      pre: |
         {{ include "chart.gpus" . }}
         cat <<EOF >> /tmp/run_${app}.sh
         #!/bin/bash
         set -euo pipefail
         mkdir -p /tmp/output
         flux resource list
         {{ if .Values.experiment.pairs }}{{ include "chart.fluxpairs" . }}
         {{ else if .Values.experiment.foreach }}{{ include "chart.foreach" . }}
         {{ else }}{{ include "chart.fluxrun" . }}{{ end }}
         {{ include "chart.fluxpost" . }}
         {{ include "chart.savelogs" . }}
         EOF
         cat /tmp/run_${app}.sh         
{{ end }}
